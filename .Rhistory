citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
install.packages(c("callr", "caTools", "cpp11", "gert", "processx", "redoc", "vctrs"))
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# In case these aren't installed, uncomment this and run it.
# install.packages("janitor", "tidyverse", "gt")
# devtools::install_github("utexas-lbjp-data/lbjdata")
library(janitor)       # Package with useful + convenient data cleaning functions
library(tidyverse)     # Core Set of R Data Science Tools (dplyr, ggplot2, tidyr, readr, etc.)
provider_data_raw <- readr::read_csv("https://genesis.soc.texas.gov/files/accessibility/vaccineprovideraccessibilitydata.csv") %>%
janitor::clean_names() # This function makes column headers machine readable
dplyr::glimpse(provider_data_raw) # glimpse() lets you preview a data object
supply_data <- provider_data_raw %>%
#  dplyr::mutate(state = "Texas") %>%  # This adds a column where every entry is the word "Texas"
dplyr::group_by(state) %>% # This groups any future functions I write by the state column I created
dplyr::summarise(          # This begins the summarise() function
Pfizer = sum(pfizer_available), # Creates a column with all pfizer supply
Moderna = sum(moderna_available), # Creates a column with all moderna supply
JandJ = sum(jj_available) # Creates a column with all jj supply
)  %>%   # This ends the summarise() function
tidyr::pivot_longer(cols = c(Pfizer, Moderna, JandJ), # reshapes our data from wide to long
names_to = "vaccine_type",
values_to = "supply")
supply_data <- provider_data_raw %>%
#  dplyr::mutate(state = "Texas") %>%  # This adds a column where every entry is the word "Texas"
#  dplyr::group_by(state) %>% # This groups any future functions I write by the state column I created
dplyr::summarise(          # This begins the summarise() function
Pfizer = sum(pfizer_available), # Creates a column with all pfizer supply
Moderna = sum(moderna_available), # Creates a column with all moderna supply
JandJ = sum(jj_available) # Creates a column with all jj supply
)  %>%   # This ends the summarise() function
tidyr::pivot_longer(cols = c(Pfizer, Moderna, JandJ), # reshapes our data from wide to long
names_to = "vaccine_type",
values_to = "supply")
dplyr::glimpse(supply_data) # glimpse() lets you preview a data object
supply_chart <- supply_data %>% # Call on the data
ggplot2::ggplot() +  # Draw A Chart Canvas
ggplot2::aes(x = vaccine_type, y = supply, fill = vaccine_type) + # Define How Data Gets Mapped
ggplot2::geom_col() + # Translate into a bar chart format
ggplot2::theme_minimal() + # Add a basic ggplot2 theme
ggplot2::theme(legend.position = "none", # Hide the legend
plot.title = element_text(face = "bold")) + # Make the title bold
ggplot2::labs(title = "Texas Vaccine Supply, by Type", # Add a title
subtitle = "Shown are the current supply of vaccines available in Texas", # Add a subtitle
caption = "Source: Texas Department of State Health Services", # Add a caption
x = "Vaccine Type",  # Add an X axis title
y = "Current Supply in Texas") # Add a Y axis title
supply_chart
## Export Our Data to a CSV File For Sharing
readr::write_csv(supply_data, "clean_supply_data.csv")
## Export Our Chart to a PNG File For Sharing
ggplot2::ggsave("vaccine_supply_chart.png", supply_chart, device = "png", dpi=300, width = 10, height = 6)
# install.packages("modelsummary") # Uncomment this if you have not installed modelsummary
library(modelsummary) # Load the {modelsummary package}
model_1 <- lm(formula=total_shipped ~ type, # Run a regression using base R
data=provider_data_raw)
modelsummary::modelsummary(model_1, stars = TRUE) # Show regression results in a table
modelsummary::modelplot(model_1) + # Draw a chart using modelsummary package
ggplot2::theme_dark() + # Add ggplot2 dark theme
ggplot2::theme(legend.position = "none", # Hide legend
plot.title = element_text(face = "bold")) + # Make title bold
ggplot2::labs(title = "Regression Chart: 'total_shipped ~ type'", # Add a title
subtitle = "How do vaccine shipments and provider type relate?", # Add a subtitle
caption = "Source: Texas Department of State Health Services", # Add a caption note
x = "Statistic", # Add a title for the X Axis
y = "Provider Types") # Add a title for the Y Axis
# install.packages("equatiomatic")
equatiomatic::extract_eq(model_1) # Extract LaTeX equation with equatiomatic package
